name: Build Multi-Platform Executables

on:
  [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9"] #根据你的需求进行选择

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nornir nornir-netmiko nornir-scrapli pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile my-app.py
        #如果需要图标或其它参数
        #run: |
        #  pyinstaller --onefile --windowed --icon=icon.ico my-app.py
        env:
          # 解决netmiko在windows下编码问题
          PYTHONUTF8: 1

      - name: Rename executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mv dist/my-app.exe dist/my-app-windows.exe

      - name: Rename executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mv dist/my-app dist/my-app-macos

      - name: Rename executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv dist/my-app dist/my-app-linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: executables-${{ matrix.os }}
          path: dist/
