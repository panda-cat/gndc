name: Build Multi-Platform Executables

on: [push]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller nornir nornir_netmiko nornir_utils netmiko

      - name: Build executable with PyInstaller
        run: |
          pyinstaller --onefile my-app.py
        env:
          PYTHONUTF8: 1

      - name: Rename executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mv dist/my-app.exe dist/my-app-windows.exe

      - name: Rename executable (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mv dist/my-app dist/my-app-macos

      - name: Rename executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mv dist/my-app dist/my-app-linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: executables-${{ matrix.os }}
          path: dist/
          if-no-files-found: error
